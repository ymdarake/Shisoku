
import type { Locales } from '../types';

export const locales: Locales = {
  ja: {
    title: '数式パズルゲーム',
    language: '言語',
    ruleTitle: 'ルール',
    rules: {
      rule1: '提示された4つの、0から9までの数字をすべて1回ずつ使います。',
      rule2: '四則演算（+、-、*、/）と括弧（()）を使って、「目的の数字」になる計算式を作ってください。',
      rule3: '目的の数字は0から9までの整数です。',
      rule4: '数字の順番は自由に変えられます。',
      rule5: '割り算は、結果が整数になる場合のみ有効です。',
    },
    start: 'スタート',
    skip: 'スキップ',
    numbersToUse: '使う数字',
    targetNumber: '目的の数字',
    buildExpression: '計算式を作ってね！',
    correct: '正解！おめでとう！',
    incorrect: '残念！計算結果が違います',
    invalidExpression: '無効な式です',
    generatingProblem: '問題を作成中...',
    finalResults: '最終結果',
    score: 'スコア: {score} / {total}',
    playAgain: 'もう一度プレイ',
    backToTop: 'トップに戻る',
    question: '問題',
    yourAnswer: 'あなたの回答',
    correctAnswer: '正解',
    status: '結果',
    statusCorrect: '正解',
    statusIncorrect: '不正解',
    statusSkipped: 'スキップ',
  },
  en: {
    title: 'Math Puzzle Game',
    language: 'Language',
    ruleTitle: 'Rules',
    rules: {
      rule1: 'Use all four given numbers (0-9) exactly once.',
      rule2: 'Create an expression using arithmetic operators (+, -, *, /) and parentheses (()) to equal the "Target Number".',
      rule3: 'The target number is an integer from 0 to 9.',
      rule4: 'The order of the numbers can be changed freely.',
      rule5: 'Division is only valid if the result is an integer.',
    },
    start: 'Start',
    skip: 'Skip',
    numbersToUse: 'Numbers to Use',
    targetNumber: 'Target Number',
    buildExpression: 'Build your expression!',
    correct: 'Correct! Congratulations!',
    incorrect: 'Incorrect! The result is wrong.',
    invalidExpression: 'Invalid Expression',
    generatingProblem: 'Generating problem...',
    finalResults: 'Final Results',
    score: 'Score: {score} / {total}',
    playAgain: 'Play Again',
    backToTop: 'Back to Top',
    question: 'Question',
    yourAnswer: 'Your Answer',
    correctAnswer: 'Correct Answer',
    status: 'Status',
    statusCorrect: 'Correct',
    statusIncorrect: 'Incorrect',
    statusSkipped: 'Skipped',
  },
};
